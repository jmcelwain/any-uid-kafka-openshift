apiVersion: v1
kind: Template
metadata:
  name: random-uid-kafka-openshift-template
  annotations:
    description: "Description"
    iconClass: "icon-java"
    tags: "kafka"
objects:
  - apiVersion: v1
    kind: Service
    metadata:
      name: kafka-broker
      labels:
        app: kafka-broker
    spec:
      ports:
      - name: kafka-broker-port
        port: ${KAFKA_BROKER_PORT}
      selector:
        app: kafka-broker
  - apiVersion: apps/v1beta1
    kind: StatefulSet
    metadata:
      name: kafka-broker
    spec:
      selector:
        matchLabels:
          app: kafka-broker
      serviceName: "kafka-broker"
      replicas: 1
      template:
        metadata:
          labels:
            app: kafka-broker
        spec:
          containers:
          - name: kafka-broker
            image: jmcelwain/random-uid-kafka:latest
            command: ["/etc/openshift/random-uid"]
            args: ["/etc/confluent/docker/run"]
            ports:
            - containerPort: ${KAFKA_BROKER_PORT}
              name: broker-port
            env:
              - name: KAFKA_BROKER_ID
                value: "1"
              - name: KAFKA_ZOOKEEPER_CONNECT
                value: zk.${NAMESPACE}.svc:${ZK_CLIENT_PORT}
              - name: KAFKA_ADVERTISED_LISTENERS
                value: PLAINTEXT://:${KAFKA_BROKER_PORT}
              - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
                value: "1"
            volumeMounts:
              - mountPath: /etc/openshift
                name: vol-random-uid
          volumes:
            - configMap:
                defaultMode: 0755
                name: random-uid
              name: vol-random-uid
  - apiVersion: v1
    kind: Service
    metadata:
      name: zk
      labels:
        app: zk
    spec:
      ports:
      - name: zk-client-port
        port: ${ZK_CLIENT_PORT}
      selector:
        app: zk
  - apiVersion: apps/v1beta1
    kind: StatefulSet
    metadata:
      name: zk
    spec:
      selector:
        matchLabels:
          app: zk
      serviceName: "zk"
      replicas: 1
      template:
        metadata:
          labels:
            app: zk
        spec:
          containers:
          - name: zk
            image: jmcelwain/random-uid-zookeeper:latest
            command: ["/etc/openshift/random-uid"]
            args: ["/etc/confluent/docker/run"]
            ports:
            - containerPort: ${ZK_CLIENT_PORT}
              name: zk-client-port
            env:
              - name: ZOOKEEPER_CLIENT_PORT 
                value: ${ZK_CLIENT_PORT}
              - name: ZOOKEEPER_TICK_TIME
                value: "2000"
            volumeMounts:
              - mountPath: /etc/openshift
                name: vol-random-uid
          volumes:
            - configMap:
                defaultMode: 0755
                name: random-uid
              name: vol-random-uid
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: random-uid
    data:
      random-uid: |-
        #!/bin/sh
        USER_ID=$(id -u)
        if [ ${USER_UID} != ${USER_ID} ]; then
            echo "${USER_NAME:-default}:x:$(id -u):0:${USER_NAME:-default} user:${HOME}:/sbin/nologin" >> /etc/passwd
        fi
        exec "$@"
parameters:
  - ZK_CLIENT_PORT:
    name: ZK_CLIENT_PORT
    displayName: Zookeeper Port
    value: "2181"
    required: true
  - KAFKA_BROKER_PORT:
    name: KAFKA_BROKER_PORT
    displayName: Kafka Port
    value: "9092"
    required: true
  - NAMESPACE:
    name: NAMESPACE
    displayName: Project namespace
    required: true
